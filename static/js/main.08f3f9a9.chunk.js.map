{"version":3,"sources":["App.js","index.js"],"names":["App","state","contacts","filter","name","number","handleChange","e","target","value","setState","handleSubmit","preventDefault","some","contact","window","alert","addContact","reset","id","uuidv4","filteredContacts","toLowerCase","includes","this","onSubmit","type","pattern","title","required","onChange","placeholder","map","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gRAMMA,E,4MACJC,MAAQ,CACNC,SAAU,GAMVC,OAAQ,GACRC,KAAM,GACNC,OAAQ,I,EAGVC,aAAe,SAAAC,GACb,MAAwBA,EAAEC,OAAlBJ,EAAR,EAAQA,KAAMK,EAAd,EAAcA,MACd,EAAKC,SAAL,eAAiBN,EAAOK,K,EAG1BE,aAAe,SAAAJ,GACbA,EAAEK,iBAEF,MAA2B,EAAKX,MAAxBG,EAAR,EAAQA,KAAR,EAAcF,SACSW,MAAK,SAAAC,GAAO,OAAIA,EAAQV,OAASA,KAGtDW,OAAOC,MAAP,UAAgBZ,EAAhB,6BAIF,EAAKa,aACL,EAAKC,U,EAGPA,MAAQ,WACN,EAAKR,SAAS,CACZN,KAAM,GACNC,OAAQ,M,EAIZY,WAAa,WACX,MAAyB,EAAKhB,MAAtBG,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OACRS,EAAU,CACdV,OACAe,GAAIC,cACJf,UAGF,EAAKK,UAAS,gBAAGR,EAAH,EAAGA,SAAH,MAAmB,CAC/BA,SAAS,GAAD,mBAAMA,GAAN,CAAgBY,S,EAI5BO,iBAAmB,WACjB,OAAO,YAAI,EAAKpB,MAAMC,UAAUC,QAAO,SAAAW,GAAO,OAC5CA,EAAQV,KAAKkB,cAAcC,SAAS,EAAKtB,MAAME,Y,4CAInD,WACE,IAAMkB,EAAmBG,KAAKH,mBAE9B,OACE,gCACE,2CACA,uBAAMI,SAAUD,KAAKb,aAArB,UACE,yCAEE,uBACEe,KAAK,OACLtB,KAAK,OACLuB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRpB,MAAOe,KAAKvB,MAAMG,KAClB0B,SAAUN,KAAKlB,aACfyB,YAAY,6BAGhB,2CAEE,uBACEL,KAAK,MACLtB,KAAK,SACLuB,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRpB,MAAOe,KAAKvB,MAAMI,OAClByB,SAAUN,KAAKlB,kBAGnB,wBAAQoB,KAAK,SAASjB,MAAM,8FAA5B,4BAKF,0CAEA,8BACE,0DAEE,uBACEiB,KAAK,OACLtB,KAAK,SACLK,MAAOe,KAAKvB,MAAME,OAClB2B,SAAUN,KAAKlB,oBAIrB,6BACGe,EAAiBW,KAAI,SAAAlB,GAAO,OAC3B,+BACGA,EAAQV,KADX,KACmBU,EAAQT,SADlBe,2B,GA/GHa,aAyHHjC,IC1HfkC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.08f3f9a9.chunk.js","sourcesContent":["import React, { Component } from 'react';\n// import ContactForm from './ContactForm';\n// import Filter from './Filter';\n// import ContactList from './ContactList';\nimport { v4 as uuidv4 } from 'uuid';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      // { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      // { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      // { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      // { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n    name: '',\n    number: '',\n  };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    const { name, contacts } = this.state;\n    const alert = contacts.some(contact => contact.name === name);\n\n    if (alert) {\n      window.alert(`${name} is already in contacts`);\n      return;\n    }\n\n    this.addContact();\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  addContact = () => {\n    const { name, number } = this.state;\n    const contact = {\n      name,\n      id: uuidv4(),\n      number,\n    };\n\n    this.setState(({ contacts }) => ({\n      contacts: [...contacts, contact],\n    }));\n  };\n\n  filteredContacts = () => {\n    return [...this.state.contacts].filter(contact =>\n      contact.name.toLowerCase().includes(this.state.filter),\n    );\n  };\n\n  render() {\n    const filteredContacts = this.filteredContacts();\n\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <form onSubmit={this.handleSubmit}>\n          <label>\n            Name\n            <input\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n              value={this.state.name}\n              onChange={this.handleChange}\n              placeholder=\"First name, last name\"\n            />\n          </label>\n          <label>\n            Number\n            <input\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              required\n              value={this.state.number}\n              onChange={this.handleChange}\n            />\n          </label>\n          <button type=\"submit\" value=\"Добавить контакт\">\n            Add contact\n          </button>\n        </form>\n\n        <h2>Contacts</h2>\n\n        <div>\n          <label>\n            Find contacts by name\n            <input\n              type=\"text\"\n              name=\"filter\"\n              value={this.state.filter}\n              onChange={this.handleChange}\n            />\n          </label>\n        </div>\n        <ul>\n          {filteredContacts.map(contact => (\n            <li key={uuidv4()}>\n              {contact.name}: {contact.number}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}